// Mocks generated by Mockito 5.4.6 from annotations
// in cribe/test/ui/home/view_models/home_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cribe/core/constants/storage_keys.dart' as _i8;
import 'package:cribe/data/model/auth/login_response.dart' as _i5;
import 'package:cribe/data/model/auth/register_response.dart' as _i6;
import 'package:cribe/data/repositories/auth_repository.dart' as _i3;
import 'package:cribe/data/services/api_service.dart' as _i2;
import 'package:cribe/data/services/storage_service.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiResponse_0<T> extends _i1.SmartFake
    implements _i2.ApiResponse<T> {
  _FakeApiResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ApiResponse<_i5.LoginResponse>> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<_i2.ApiResponse<_i5.LoginResponse>>.value(
            _FakeApiResponse_0<_i5.LoginResponse>(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i2.ApiResponse<_i5.LoginResponse>>);

  @override
  _i4.Future<_i2.ApiResponse<_i6.RegisterResponse>> register(
    String? email,
    String? password,
    String? firstName,
    String? lastName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [
            email,
            password,
            firstName,
            lastName,
          ],
        ),
        returnValue: _i4.Future<_i2.ApiResponse<_i6.RegisterResponse>>.value(
            _FakeApiResponse_0<_i6.RegisterResponse>(
          this,
          Invocation.method(
            #register,
            [
              email,
              password,
              firstName,
              lastName,
            ],
          ),
        )),
      ) as _i4.Future<_i2.ApiResponse<_i6.RegisterResponse>>);
}

/// A class which mocks [StorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageService extends _i1.Mock implements _i7.StorageService {
  MockStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  String getValue(_i8.StorageKey? key) => (super.noSuchMethod(
        Invocation.method(
          #getValue,
          [key],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #getValue,
            [key],
          ),
        ),
      ) as String);

  @override
  _i4.Future<bool> setValue(
    _i8.StorageKey? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setValue,
          [
            key,
            value,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
