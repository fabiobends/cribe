// Mocks generated by Mockito 5.4.6 from annotations
// in cribe/test/data/repositories/auth_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cribe/data/model/auth/login_response.dart' as _i5;
import 'package:cribe/data/services/api_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiResponse_0<T1> extends _i1.SmartFake
    implements _i2.ApiResponse<T1> {
  _FakeApiResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i2.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  _i4.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setTokens(_i5.LoginResponse? tokens) => (super.noSuchMethod(
        Invocation.method(
          #setTokens,
          [tokens],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.ApiResponse<T>> get<T>(
    String? path,
    T Function(dynamic)? fromJson,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [
            path,
            fromJson,
          ],
        ),
        returnValue: _i4.Future<_i2.ApiResponse<T>>.value(_FakeApiResponse_0<T>(
          this,
          Invocation.method(
            #get,
            [
              path,
              fromJson,
            ],
          ),
        )),
      ) as _i4.Future<_i2.ApiResponse<T>>);

  @override
  _i4.Future<_i2.ApiResponse<T>> post<T>(
    String? path,
    T Function(dynamic)? fromJson, {
    Map<String, dynamic>? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [
            path,
            fromJson,
          ],
          {#body: body},
        ),
        returnValue: _i4.Future<_i2.ApiResponse<T>>.value(_FakeApiResponse_0<T>(
          this,
          Invocation.method(
            #post,
            [
              path,
              fromJson,
            ],
            {#body: body},
          ),
        )),
      ) as _i4.Future<_i2.ApiResponse<T>>);

  @override
  _i4.Future<_i2.ApiResponse<T>> delete<T>(
    String? path,
    T Function(dynamic)? fromJson,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [
            path,
            fromJson,
          ],
        ),
        returnValue: _i4.Future<_i2.ApiResponse<T>>.value(_FakeApiResponse_0<T>(
          this,
          Invocation.method(
            #delete,
            [
              path,
              fromJson,
            ],
          ),
        )),
      ) as _i4.Future<_i2.ApiResponse<T>>);

  @override
  _i4.Future<_i2.ApiResponse<T>> put<T>(
    String? path,
    T Function(dynamic)? fromJson, {
    Map<String, dynamic>? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            path,
            fromJson,
          ],
          {#body: body},
        ),
        returnValue: _i4.Future<_i2.ApiResponse<T>>.value(_FakeApiResponse_0<T>(
          this,
          Invocation.method(
            #put,
            [
              path,
              fromJson,
            ],
            {#body: body},
          ),
        )),
      ) as _i4.Future<_i2.ApiResponse<T>>);

  @override
  _i4.Future<_i2.ApiResponse<T>> patch<T>(
    String? path,
    T Function(dynamic)? fromJson, {
    Map<String, dynamic>? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [
            path,
            fromJson,
          ],
          {#body: body},
        ),
        returnValue: _i4.Future<_i2.ApiResponse<T>>.value(_FakeApiResponse_0<T>(
          this,
          Invocation.method(
            #patch,
            [
              path,
              fromJson,
            ],
            {#body: body},
          ),
        )),
      ) as _i4.Future<_i2.ApiResponse<T>>);
}
